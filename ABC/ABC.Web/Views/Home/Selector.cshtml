
@{
    ViewBag.Title = "Selector";
}

<link href="~/Scripts/zTree_v3/css/zTreeStyle/zTreeStyle.css" rel="stylesheet" />

<input id="selector" name="keyword" class="input-lg" type="text" onclick="showMenu();" readonly />
<div id="menuContent" class="menuContent" style="display:none; position: absolute;">
    <ul id="tree" class="ztree" style="margin-top: 0;border: 1px solid #617775;background: #f0f6e4;width:220px;height:360px;overflow-y:auto;overflow-x:auto;"></ul>
</div>

@section scripts{
    <script src="~/Scripts/zTree_v3/js/jquery.ztree.core.min.js"></script>
    <script src="~/Scripts/zTree_v3/js/jquery.ztree.excheck.min.js"></script>
    <script type="text/javascript">
        function TreeSelector(selectorId, treeId, url, zNodes, chkStyle, selectedMulti, simpleDataEnable) {
            this.selectorId = selectorId;
            this.treeId = treeId;
            this.url = url;
            this.zNodes = zNodes;
            this.chkStyle = chkStyle;
            this.selectedMulti = selectedMulti;
            this.simpleDataEnable = simpleDataEnable;
        }

        TreeSelector.prototype.setting = {
            view: {
                dblClickExpand: false
            },
            callback: {
                onCheck: this.onCheck
            }
        };

        TreeSelector.prototype.Init = function () {
            if (this.chkStyle == "radio" || this.chkStyle == "checkbox") {
                this.setting.check = {
                    enable: true,
                    chkStyle: this.chkStyle
                };
                this.setting.callback.onClick = this.onClick;
                if (this.chkStyle == "radio") {
                    this.setting.check.radioType = "all";
                } else {
                    this.setting.check.chkboxType = { "Y": "", "N": "" };
                }
            } else if (this.selectedMulti != undefined) {
                this.setting.view.selectedMulti = this.selectedMulti;
            }
            if (this.zNodes == undefined && this.url == undefined) {
                alert("请配置zNodes或者url！");
            }
            if (this.zNodes == undefined) {
                this.setting.async = {
                    enable: true,
                    url: this.url
                }
                $.fn.zTree.init($("#" + this.treeId), this.setting);
            } else {
                $.fn.zTree.init($("#" + this.treeId), this.setting, this.zNodes);
            }
            $("#" + this.selectorId).click(function () {
                var cityObj = $("#selector");
                var cityOffset = $("#selector").offset();
                $("#menuContent").css({ left: cityOffset.left + "px", top: cityOffset.top + cityObj.outerHeight() + "px" }).slideDown("fast");

                $("body").unbind("mousedown", onBodyDown).bind("mousedown", onBodyDown);
            })
        };

        TreeSelector.prototype.onClick = function (e, treeId, treeNode) {
            var zTree = $.fn.zTree.getZTreeObj(this.treeId);
            zTree.checkNode(treeNode, !treeNode.checked, null, true);
        };

        TreeSelector.prototype.onCheck = function (e, treeId, treeNode) {
            var zTree = $.fn.zTree.getZTreeObj(this.treeId),
			nodes = zTree.getCheckedNodes(true),
			v = "";
            for (var i = 0, l = nodes.length; i < l; i++) {
                v += nodes[i].name + ",";
            }
            if (v.length > 0) v = v.substring(0, v.length - 1);
            var cityObj = $("#" + this.selectorId);
            cityObj.attr("value", v);
        };

        TreeSelector.prototype.
    </script>
    <script type="text/javascript">
        var xin = 0;
        var setting = {
            check: {
                enable: true,
                chkStyle: "radio",
                radioType: "all"
            },
            view: {
                dblClickExpand: false
            },
            data: {
                simpleData: {
                    enable: true
                }
            },
            callback: {
                onClick: onClick,
                onCheck: onCheck
            }
        };

        var zNodes = [
			{ id: 1, pId: 0, name: "北京" },
			{ id: 2, pId: 0, name: "天津" },
			{ id: 3, pId: 0, name: "上海" },
			{ id: 6, pId: 0, name: "重庆" },
			{ id: 4, pId: 0, name: "河北省", open: true, nocheck: true },
			{ id: 41, pId: 4, name: "石家庄" },
			{ id: 42, pId: 4, name: "保定" },
			{ id: 43, pId: 4, name: "邯郸" },
			{ id: 44, pId: 4, name: "承德" },
			{ id: 5, pId: 0, name: "广东省", open: true },
			{ id: 51, pId: 5, name: "广州" },
			{ id: 52, pId: 5, name: "深圳" },
			{ id: 53, pId: 5, name: "东莞" },
			{ id: 54, pId: 5, name: "佛山" },
			{ id: 6, pId: 0, name: "福建省", open: true, nocheck: true },
			{ id: 61, pId: 6, name: "福州" },
			{ id: 62, pId: 6, name: "厦门" },
			{ id: 63, pId: 6, name: "泉州" },
			{ id: 64, pId: 6, name: "三明" }
        ];

        function onClick(e, treeId, treeNode) {
            var zTree = $.fn.zTree.getZTreeObj("tree");
            zTree.checkNode(treeNode, !treeNode.checked, null, true);
            return false;
        }

        function onCheck(e, treeId, treeNode) {
            var zTree = $.fn.zTree.getZTreeObj("tree"),
			nodes = zTree.getCheckedNodes(true),
			v = "";
            for (var i = 0, l = nodes.length; i < l; i++) {
                v += nodes[i].name + ",";
            }
            if (v.length > 0) v = v.substring(0, v.length - 1);
            var cityObj = $("#selector");
            cityObj.attr("value", v);
        }

        function showMenu() {
            var cityObj = $("#selector");
            var cityOffset = $("#selector").offset();
            $("#menuContent").css({ left: cityOffset.left + "px", top: cityOffset.top + cityObj.outerHeight() + "px" }).slideDown("fast");

            $("body").unbind("mousedown", onBodyDown).bind("mousedown", onBodyDown);
        }
        function hideMenu() {
            $("#menuContent").fadeOut("fast");
            $("body").unbind("mousedown", onBodyDown);
        }
        function onBodyDown(event) {
            if (!(event.target.id == "selector" || event.target.id == "menuContent" || $(event.target).parents("#menuContent").length > 0)) {
                hideMenu();
            }
            xin++;
            console.log(xin);
        }

        $(document).ready(function () {
            $.fn.zTree.init($("#tree"), setting, zNodes);
        });
    </script>
}